// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using list_api.Data;

#nullable disable

namespace list_api.Migrations
{
    [DbContext(typeof(ListApiDbContext))]
    [Migration("20230306171247_migration_06")]
    partial class migration_06
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("list_api.Models.Brand", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("ID");

                    b.ToTable("Brands", (string)null);
                });

            modelBuilder.Entity("list_api.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("ID");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("list_api.Models.List", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("DateTimeCompleting")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateTimeCreating")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateTimeUpdating")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<int>("IDCategory")
                        .HasColumnType("int");

                    b.Property<int>("IDStatus")
                        .HasColumnType("int");

                    b.Property<int>("IDUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<double>("TotalCost")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("IDCategory");

                    b.HasIndex("IDStatus");

                    b.HasIndex("IDUser");

                    b.ToTable("Lists", (string)null);
                });

            modelBuilder.Entity("list_api.Models.ListProduct", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<int>("IDList")
                        .HasColumnType("int");

                    b.Property<int>("IDProduct")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IDList");

                    b.HasIndex("IDProduct");

                    b.ToTable("ListProducts", (string)null);
                });

            modelBuilder.Entity("list_api.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<int>("IDBrand")
                        .HasColumnType("int");

                    b.Property<int>("IDCategory")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("IDBrand");

                    b.HasIndex("IDCategory");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("list_api.Models.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("ID");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("list_api.Models.Status", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("ID");

                    b.ToTable("Statuses", (string)null);
                });

            modelBuilder.Entity("list_api.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("IDRole")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(36)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("RefreshTokenExpireDate")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.HasIndex("IDRole");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("list_api.Models.List", b =>
                {
                    b.HasOne("list_api.Models.Category", "Category")
                        .WithMany("Lists")
                        .HasForeignKey("IDCategory")
                        .IsRequired();

                    b.HasOne("list_api.Models.Status", "Status")
                        .WithMany("Lists")
                        .HasForeignKey("IDStatus")
                        .IsRequired();

                    b.HasOne("list_api.Models.User", "User")
                        .WithMany("Lists")
                        .HasForeignKey("IDUser")
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("list_api.Models.ListProduct", b =>
                {
                    b.HasOne("list_api.Models.List", "List")
                        .WithMany("ListProducts")
                        .HasForeignKey("IDList")
                        .IsRequired();

                    b.HasOne("list_api.Models.Product", "Product")
                        .WithMany("ListProducts")
                        .HasForeignKey("IDProduct")
                        .IsRequired();

                    b.Navigation("List");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("list_api.Models.Product", b =>
                {
                    b.HasOne("list_api.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("IDBrand")
                        .IsRequired();

                    b.HasOne("list_api.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("IDCategory")
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("list_api.Models.User", b =>
                {
                    b.HasOne("list_api.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IDRole")
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("list_api.Models.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("list_api.Models.Category", b =>
                {
                    b.Navigation("Lists");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("list_api.Models.List", b =>
                {
                    b.Navigation("ListProducts");
                });

            modelBuilder.Entity("list_api.Models.Product", b =>
                {
                    b.Navigation("ListProducts");
                });

            modelBuilder.Entity("list_api.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("list_api.Models.Status", b =>
                {
                    b.Navigation("Lists");
                });

            modelBuilder.Entity("list_api.Models.User", b =>
                {
                    b.Navigation("Lists");
                });
#pragma warning restore 612, 618
        }
    }
}
